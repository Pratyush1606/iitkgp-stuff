	AREA main, CODE, READONLY ;area is a directive
	EXPORT __main
	ENTRY
; sig dcw 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000, 0x00d8, 0xffb1, 0xfe8c, 0xff6a, 0x004b, 0xff31, 0xfe1c, 0xff0d, 0x0003, 0xff00, 0xfe03, 0xff0d, 0x001c, 0xff31, 0xfe4b, 0xff6a, 0x008c, 0xffb1, 0xfed8, 0x0000, 0x0128, 0x004f, 0xff74, 0x0096, 0x01b5, 0x00cf, 0xffe4, 0x00f3, 0x01fd, 0x0100, 0xfffd, 0x00f3, 0x01e4, 0x00cf, 0xffb5, 0x0096, 0x0174, 0x004f, 0xff28, 0x0000
; h dcw 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0001, 0x0003, 0x0006, 0x0009, 0x000d, 0x0011, 0x0014, 0x0017, 0x0019, 0x001a, 0x0019, 0x0017, 0x0014, 0x0011, 0x000d, 0x0009, 0x0006, 0x0003, 0x0001, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0x0000, 0x0000

sig dcw 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffd4, 0xffaf, 0xffaf, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4, 0x0000, 0x003c, 0x0061, 0x0061, 0x003c, 0x0000, 0xffc4, 0xff9f, 0xff9f, 0xffc4
h dcw 0x0003, 0xfffb, 0xfff7, 0xfffb, 0x0001, 0x0004, 0x0003, 0x0000, 0x0000, 0x0001, 0x0001, 0xffff, 0xfffd, 0xfffe, 0x0000, 0x0001, 0x0000, 0xffff, 0x0001, 0x0003, 0x0002, 0x0000, 0xfffe, 0xffff, 0x0000, 0xffff, 0xfffc, 0xfffc, 0x0001, 0x0008, 0x000a, 0x0003, 0xfff9, 0xfff4, 0xfff9, 0x0002, 0x0007, 0x0005, 0x0001, 0xffff, 0x0000, 0x0001, 0xffff, 0xfffd, 0xfffd, 0x0000, 0x0002, 0x0001, 0x0000, 0x0001, 0x0002, 0x0002, 0x0000, 0xfffd, 0xfffd, 0xffff, 0x0000, 0xfffe, 0xfffd, 0x0001, 0x0007, 0x0009, 0x0003, 0xfff8, 0x00f3, 0xfff8, 0x0003, 0x0009, 0x0007, 0x0001, 0xfffd, 0xfffe, 0x0000, 0xffff, 0xfffd, 0xfffd, 0x0000, 0x0002, 0x0002, 0x0001, 0x0000, 0x0001, 0x0002, 0x0000, 0xfffd, 0xfffd, 0xffff, 0x0001, 0x0000, 0xffff, 0x0001, 0x0005, 0x0007, 0x0002, 0xfff9, 0xfff4, 0xfff9, 0x0003, 0x000a, 0x0008, 0x0001, 0xfffc, 0xfffc, 0xffff, 0x0000, 0xffff, 0xfffe, 0x0000, 0x0002, 0x0003, 0x0001, 0xffff, 0x0000, 0x0001, 0x0000, 0xfffe, 0xfffd, 0xffff, 0x0001, 0x0001, 0x0000, 0x0000, 0x0003, 0x0004, 0x0001, 0xfffb, 0xfff7, 0xfffb, 0x0003

f equ 8 ;length of fraction part of fixed point
	
l equ 1000 ; Input length*2 for 2 byte alignment
hl equ 1000 ; Filter length*2 for 2 byte alignment
ol equ 2000 ; Output length*2 for 2 byte alignment

;convlution code
;for(i=0;i<ol;i++){
;y[i]=0;
;for(j=0;i<hl;i++)
;(if(0<i-j<l){
;y[i]=y[i]+x[i-j]*h[j];
;};
;};
;};

__main
	ldr r0,=sig ;Address of input signal
	ldr r1,=h ;Address of filter coefficients
	mov r2,#0x0000 ;output signal memory lower byte
	movt r2,#0x2000 ;output signal memory upper byte 0x2000000000
	
	mov r3,#0 ;i=0
__outer_loop ;for(i=0;i<ol;i++)
	cmp r3,#ol
	bge __exit_outer_loop ;exit if i>=ol
	mov r4,#0 ;j=0
	mov r9,#0 ;accumulator=0
__inner_loop ;for(j=0;i<hl;i++)
	cmp r4,#hl
	bge __exit_inner_loop ;exit if j>=hl
	subs r5,r3,r4 ;r5=i-j
	bmi __skip ;skip if i-j<0
	cmp r5, #l
	bge __skip ;skip if i-j>=length(input signal)
	add r6, r5, r0 ;r6=&x[i-j], address pointer
	ldrsh r11,[r6] ;r11=x[i-j]
	add r7,r4,r1 ;r6=&h[j], address pointer
	ldrsh r12, [r7] ;r12=h[j]
	bl __mul ;r10= x[i-j]*h[j]
	add r9, r9, r10 ;accumulator=accumulator+x[i-j]*h[j]
	
__skip
	add r4, r4, #2 ;next filter coeff address
	b __inner_loop ;repeat inner loop

__exit_inner_loop
	add r8, r3, r2 ;r8=&y[i], address pointer
	strh r9,[r8] ;store y[i] in &y[i]
	;ldrsh r10,[r8] ;to check y[i]
	add r3, r3, #2 ;next input signal address
	b __outer_loop ;repeat outer loop
	
__exit_outer_loop
	b __exit_outer_loop ;convolution end
	
__mul  ;multiply two 16bit fixed point numbers in r11 & r12, product in r10. result format A(8,8)
	mul r10, r11,r12 
	asr r10,#f ;multiply with 2^-f, f=8, as fixed point multiplication
	cmp r10,#0
	bmi __neg
	movt r10,#0x0000 ;Extend upper 16bits if no is positive
	bx lr
__neg
	movt r10,#0xffff ;Extend upper 16bits if no is negative
	bx lr